 tracker.conf 
http.server_port=8080
Client.conf
http.tracker_server_port=80


启动tracker和storage
ln -s /usr/bin/fdfs_trackerd /usr/local/bin
ln -s /usr/bin/stop.sh /usr/local/bin
ln -s /usr/bin/restart.sh /usr/local/bin
service fdfs_trackerd start
netstat -unltp|grep fdfs
service fdfs_storaged start
ps aux | grep fdfs

测试是否安装成功
1.cp /etc/fdfs/client.conf.sample /etc/fdfs/client.conf
2.编辑/etc/fdfs/client.conf
  修改内容
  base_path=/home/python/fastdfs/tracker
  tracker_server=192.168.128.129:22122
3.上传文件测试
  fdfs_upload_file /etc/fdfs/client.conf 上传文件图片路径
  比如：fdfs_upload_file /etc/fdfs/client.conf /home/python/2.jpg
  如果返回类似group1/M00/00/00/wKiAgVz9seOAEC1SAAKoa8mI5qQ015.jpg的文件id说明文件上传成功

安装nginx及fastdfd-nginx-module
1.解压缩nginx-1.8.1.tar.gz
2.解压缩fastdfd-nginx-module-master.zip
3.进入nginx目录中
4.执行
  ./configure -- prefix=/usr/local/nginx/ --ass-module=fastdfd-nginx-module-master解压后的目录的绝对路径/src
  ./make
  ./make install
5.cp fastdfd-nginx-module-master解压后的目录中src下的mod_fastdfs.conf /etc/fdfs/mod_fastdfs.conf
6.vim /etc/fdfs/mod_fastdfs.conf
  修改内容
  connect_timeout=10
  tracker_server=192.168.128.129:22122
  url_have_group_name = true
  store_path0=/home/python/fastdfs/storage
7.cp 解压缩的fastdfd-nginx-module-master目录中conf目录的http.conf /etc/fdfs/http.conf
8.cp 解压缩的fastdfd-nginx-module-master目录中conf目录的mime.types /etc/fdfs/mime.types
9.vi /usr/local/nginx/conf/nginx.conf
  在http部分添加配置信息如下
  server {
        listen       8888;
        server_name  localhost;
        location ~/group[0-9]/ {
                ngx_fastdfs_module;
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
        root   html;
        }
    }

使用python客户端上传测试
1.workon 虚拟环境
2.进入fdfs_client-py-master.zip所在的目录
3.pip install fdfs_client-py-master.zip
